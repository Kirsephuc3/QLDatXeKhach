# Generated by Django 5.0.1 on 2024-02-22 16:23

import ckeditor.fields
import cloudinary.models
import django.contrib.auth.models
import django.contrib.auth.validators
import django.db.models.deletion
import django.utils.timezone
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0012_alter_user_first_name_max_length'),
    ]

    operations = [
        migrations.CreateModel(
            name='Driver',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('create_date', models.DateField(auto_now_add=True, null=True)),
                ('update_date', models.DateField(auto_now=True, null=True)),
                ('active', models.BooleanField(default=True)),
                ('license_number', models.CharField(max_length=100, null=True)),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='Role',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('create_date', models.DateField(auto_now_add=True, null=True)),
                ('update_date', models.DateField(auto_now=True, null=True)),
                ('active', models.BooleanField(default=True)),
                ('name', models.CharField(max_length=255)),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='Route',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('create_date', models.DateField(auto_now_add=True, null=True)),
                ('update_date', models.DateField(auto_now=True, null=True)),
                ('active', models.BooleanField(default=True)),
                ('depart', models.CharField(choices=[('AN_GIANG', 'An Giang'), ('BA_RIA_VUNG_TAU', 'Bà Rịa - Vũng Tàu'), ('BAC_LIEU', 'Bạc Liêu'), ('BAC_GIANG', 'Bắc Giang'), ('BAC_KAN', 'Bắc Kạn'), ('BAC_NINH', 'Bắc Ninh'), ('BEN_TRE', 'Bến Tre'), ('BINH_DUONG', 'Bình Dương'), ('BINH_DINH', 'Bình Định'), ('BINH_PHUOC', 'Bình Phước'), ('BINH_THUAN', 'Bình Thuận'), ('CA_MAU', 'Cà Mau'), ('CAO_BANG', 'Cao Bằng'), ('CAN_THO', 'Cần Thơ'), ('DA_NANG', 'Đà Nẵng'), ('DAK_LAK', 'Đắk Lắk'), ('DAK_NONG', 'Đắk Nông'), ('DIEN_BIEN', 'Điện Biên'), ('DONG_NAI', 'Đồng Nai'), ('DONG_THAP', 'Đồng Tháp'), ('GIA_LAI', 'Gia Lai'), ('HA_GIANG', 'Hà Giang'), ('HA_NAM', 'Hà Nam'), ('HA_NOI', 'Hà Nội'), ('HA_TINH', 'Hà Tĩnh'), ('HAI_DUONG', 'Hải Dương'), ('HAI_PHONG', 'Hải Phòng'), ('HAU_GIANG', 'Hậu Giang'), ('HOA_BINH', 'Hòa Bình'), ('HUNG_YEN', 'Hưng Yên'), ('KHANH_HOA', 'Khánh Hòa'), ('KIEN_GIANG', 'Kiên Giang'), ('KON_TUM', 'Kon Tum'), ('LAI_CHAU', 'Lai Châu'), ('LANG_SON', 'Lạng Sơn'), ('LAO_CAI', 'Lào Cai'), ('LAM_DONG', 'Lâm Đồng'), ('LONG_AN', 'Long An'), ('NAM_DINH', 'Nam Định'), ('NGHE_AN', 'Nghệ An'), ('NINH_BINH', 'Ninh Bình'), ('NINH_THUAN', 'Ninh Thuận'), ('PHU_THO', 'Phú Thọ'), ('PHU_YEN', 'Phú Yên'), ('QUANG_BINH', 'Quảng Bình'), ('QUANG_NAM', 'Quảng Nam'), ('QUANG_NGAI', 'Quảng Ngãi'), ('QUANG_NINH', 'Quảng Ninh'), ('QUANG_TRI', 'Quảng Trị'), ('SOC_TRANG', 'Sóc Trăng'), ('SON_LA', 'Sơn La'), ('TAY_NINH', 'Tây Ninh'), ('THAI_BINH', 'Thái Bình'), ('THAI_NGUYEN', 'Thái Nguyên'), ('THANH_HOA', 'Thanh Hóa'), ('THUA_THIEN_HUE', 'Thừa Thiên Huế'), ('TIEN_GIANG', 'Tiền Giang'), ('TP_HO_CHI_MINH', 'TP. Hồ Chí Minh'), ('TRA_VINH', 'Trà Vinh'), ('TUYEN_QUANG', 'Tuyên Quang'), ('VINH_LONG', 'Vĩnh Long'), ('VINH_PHUC', 'Vĩnh Phúc'), ('YEN_BAI', 'Yên Bái')], max_length=100, null=True)),
                ('dest', models.CharField(choices=[('AN_GIANG', 'An Giang'), ('BA_RIA_VUNG_TAU', 'Bà Rịa - Vũng Tàu'), ('BAC_LIEU', 'Bạc Liêu'), ('BAC_GIANG', 'Bắc Giang'), ('BAC_KAN', 'Bắc Kạn'), ('BAC_NINH', 'Bắc Ninh'), ('BEN_TRE', 'Bến Tre'), ('BINH_DUONG', 'Bình Dương'), ('BINH_DINH', 'Bình Định'), ('BINH_PHUOC', 'Bình Phước'), ('BINH_THUAN', 'Bình Thuận'), ('CA_MAU', 'Cà Mau'), ('CAO_BANG', 'Cao Bằng'), ('CAN_THO', 'Cần Thơ'), ('DA_NANG', 'Đà Nẵng'), ('DAK_LAK', 'Đắk Lắk'), ('DAK_NONG', 'Đắk Nông'), ('DIEN_BIEN', 'Điện Biên'), ('DONG_NAI', 'Đồng Nai'), ('DONG_THAP', 'Đồng Tháp'), ('GIA_LAI', 'Gia Lai'), ('HA_GIANG', 'Hà Giang'), ('HA_NAM', 'Hà Nam'), ('HA_NOI', 'Hà Nội'), ('HA_TINH', 'Hà Tĩnh'), ('HAI_DUONG', 'Hải Dương'), ('HAI_PHONG', 'Hải Phòng'), ('HAU_GIANG', 'Hậu Giang'), ('HOA_BINH', 'Hòa Bình'), ('HUNG_YEN', 'Hưng Yên'), ('KHANH_HOA', 'Khánh Hòa'), ('KIEN_GIANG', 'Kiên Giang'), ('KON_TUM', 'Kon Tum'), ('LAI_CHAU', 'Lai Châu'), ('LANG_SON', 'Lạng Sơn'), ('LAO_CAI', 'Lào Cai'), ('LAM_DONG', 'Lâm Đồng'), ('LONG_AN', 'Long An'), ('NAM_DINH', 'Nam Định'), ('NGHE_AN', 'Nghệ An'), ('NINH_BINH', 'Ninh Bình'), ('NINH_THUAN', 'Ninh Thuận'), ('PHU_THO', 'Phú Thọ'), ('PHU_YEN', 'Phú Yên'), ('QUANG_BINH', 'Quảng Bình'), ('QUANG_NAM', 'Quảng Nam'), ('QUANG_NGAI', 'Quảng Ngãi'), ('QUANG_NINH', 'Quảng Ninh'), ('QUANG_TRI', 'Quảng Trị'), ('SOC_TRANG', 'Sóc Trăng'), ('SON_LA', 'Sơn La'), ('TAY_NINH', 'Tây Ninh'), ('THAI_BINH', 'Thái Bình'), ('THAI_NGUYEN', 'Thái Nguyên'), ('THANH_HOA', 'Thanh Hóa'), ('THUA_THIEN_HUE', 'Thừa Thiên Huế'), ('TIEN_GIANG', 'Tiền Giang'), ('TP_HO_CHI_MINH', 'TP. Hồ Chí Minh'), ('TRA_VINH', 'Trà Vinh'), ('TUYEN_QUANG', 'Tuyên Quang'), ('VINH_LONG', 'Vĩnh Long'), ('VINH_PHUC', 'Vĩnh Phúc'), ('YEN_BAI', 'Yên Bái')], max_length=100, null=True)),
                ('description', ckeditor.fields.RichTextField()),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='TicketPrice',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('create_date', models.DateField(auto_now_add=True, null=True)),
                ('update_date', models.DateField(auto_now=True, null=True)),
                ('active', models.BooleanField(default=True)),
                ('price', models.DecimalField(decimal_places=3, max_digits=10, null=True)),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='Trip',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('create_date', models.DateField(auto_now_add=True, null=True)),
                ('update_date', models.DateField(auto_now=True, null=True)),
                ('active', models.BooleanField(default=True)),
                ('departure_date', models.DateField(null=True)),
                ('start_time', models.TimeField(null=True)),
                ('end_time', models.TimeField(null=True)),
                ('pickup_location', models.CharField(max_length=100, null=True)),
                ('dropoff_location', models.CharField(max_length=100, null=True)),
                ('avatar', cloudinary.models.CloudinaryField(max_length=255, null=True, verbose_name='car')),
                ('driver', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='tríps', to='CoachTicketBooking.driver')),
                ('price', models.ForeignKey(default=1, on_delete=django.db.models.deletion.CASCADE, to='CoachTicketBooking.ticketprice')),
                ('route', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='CoachTicketBooking.route')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='Ticket',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('create_date', models.DateField(auto_now_add=True, null=True)),
                ('update_date', models.DateField(auto_now=True, null=True)),
                ('active', models.BooleanField(default=True)),
                ('seat_number', models.CharField(choices=[('G1', 'G1'), ('G2', 'G2'), ('G3', 'G3'), ('G4', 'G4'), ('G5', 'G5'), ('G6', 'G6'), ('G7', 'G7'), ('G8', 'G8'), ('G9', 'G9'), ('G10', 'G10'), ('G11', 'G11'), ('G12', 'G12')], max_length=20, null=True)),
                ('trip', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='tickets', to='CoachTicketBooking.trip')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='User',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('username', models.CharField(error_messages={'unique': 'A user with that username already exists.'}, help_text='Required. 150 characters or fewer. Letters, digits and @/./+/-/_ only.', max_length=150, unique=True, validators=[django.contrib.auth.validators.UnicodeUsernameValidator()], verbose_name='username')),
                ('first_name', models.CharField(blank=True, max_length=150, verbose_name='first name')),
                ('last_name', models.CharField(blank=True, max_length=150, verbose_name='last name')),
                ('email', models.EmailField(blank=True, max_length=254, verbose_name='email address')),
                ('is_staff', models.BooleanField(default=False, help_text='Designates whether the user can log into this admin site.', verbose_name='staff status')),
                ('is_active', models.BooleanField(default=True, help_text='Designates whether this user should be treated as active. Unselect this instead of deleting accounts.', verbose_name='active')),
                ('date_joined', models.DateTimeField(default=django.utils.timezone.now, verbose_name='date joined')),
                ('avatar', cloudinary.models.CloudinaryField(max_length=255, null=True, verbose_name='image')),
                ('phone', models.CharField(blank=True, max_length=255, null=True)),
                ('role', models.CharField(blank=True, choices=[('admin', 'Amin'), ('ticket seller', 'Nhân Viên Bán Vé'), ('driver', 'Tài Xế'), ('user', 'Khách hàng')], max_length=255, null=True)),
                ('date_of_birth', models.DateField(blank=True, null=True)),
                ('gender', models.CharField(choices=[('male', 'Nam'), ('female', 'Nữ'), ('other', 'Khác')], max_length=255, null=True)),
                ('address', models.CharField(max_length=255, null=True)),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.group', verbose_name='groups')),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.permission', verbose_name='user permissions')),
            ],
            options={
                'verbose_name': 'user',
                'verbose_name_plural': 'users',
                'abstract': False,
            },
            managers=[
                ('objects', django.contrib.auth.models.UserManager()),
            ],
        ),
        migrations.CreateModel(
            name='TicketSeller',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('create_date', models.DateField(auto_now_add=True, null=True)),
                ('update_date', models.DateField(auto_now=True, null=True)),
                ('active', models.BooleanField(default=True)),
                ('license_number', models.CharField(max_length=100, null=True)),
                ('ticket', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, to='CoachTicketBooking.ticket')),
                ('user', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.AddField(
            model_name='driver',
            name='user',
            field=models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL),
        ),
        migrations.CreateModel(
            name='Customer',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('create_date', models.DateField(auto_now_add=True, null=True)),
                ('update_date', models.DateField(auto_now=True, null=True)),
                ('active', models.BooleanField(default=True)),
                ('ticket_info', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, to='CoachTicketBooking.ticket')),
                ('trip', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='CoachTicketBooking.trip')),
                ('user', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'abstract': False,
            },
        ),
    ]
